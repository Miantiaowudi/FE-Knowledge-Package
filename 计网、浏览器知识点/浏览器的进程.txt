1.进程（process）和线程（thread）是操作系统的基本概念。
进程是 CPU 资源分配的最小单位（是能拥有资源和独立运行的最小单位）。
线程是 CPU 调度的最小单位（是建立在进程基础上的一次程序运行单位）。

2.浏览器进程：
（1） 主进程：负责浏览器界面的显示与交互。各个页面的管理,创建和销毁其他进程。网络的资源管理、下载等。
（2） 第三方插件进程：每种类型的插件对应一个进程,仅当使用该插件时才创建。
（3） GPU进程：最多只有一个,用于 3D 绘制等
（4） 渲染进程：称为浏览器渲染进程或浏览器内核,内部是多线程的。主要负责页面渲染,脚本执行,事件处理等。

3.渲染进程包括：
（1） JS引擎线程：负责处理Javascript脚本程序
JS引擎一直等待着任务队列中任务的到来,然后加以处理,一个Tab页（renderer 进程）中无论什么时候都只有一个JS线程在运行JS程序
GUI渲染线程与JS引擎线程是互斥的,所以如果JS执行的时间过长,这样就会造成页面的渲染不连贯,导致页面渲染加载阻塞。

（2） 事件触发线程：归属于浏览器而不是JS引擎,用来控制事件循环
当JS引擎执行代码块如setTimeOut时（也可来自浏览器内核的其他线程,如鼠标点击、AJAX异步请求等）,会将对应任务添加到事件线程中
当对应的事件符合触发条件被触发时,该线程会把事件添加到待处理队列的队尾,等待JS引擎的处理

（3） 定时器触发线程：setInterval与setTimeout所在线程
浏览器定时计数器并不是由JavaScript引擎计数的,（因为JavaScript引擎是单线程的, 如果处于阻塞线程状态就会影响记计时的准确）

（4） 异步http请求线程：在XMLHttpRequest在连接后是通过浏览器新开一个线程请求
将检测到状态变更时,如果设置有回调函数,异步线程就产生状态变更事件,将这个回调再放入事件队列中。再由JavaScript引擎执行

（5） GUI渲染线程：负责渲染浏览器界面,解析 HTML,CSS,构建 DOM 树和 RenderObject 树,布局和绘制等，
当界面需要重绘（Repaint）或由于某种操作引发回流(reflow)时,该线程就会执行。
注意,GUI渲染线程与JS引擎线程是互斥的,当JS引擎执行时，GUI线程会被挂起（相当于被冻结了）,GUI更新会被保存在一个队列中等到JS引擎空闲时立即被执行。

4.浏览器的渲染流程：
（1） 解析 HTML 文件,构建 DOM 树,同时浏览器主进程负责下载 CSS 文件
（2） CSS 文件下载完成,解析 CSS 文件成树形的数据结构,然后结合 DOM 树合并成 RenderObject 树
（3） 布局 RenderObject 树 （Layout/reflow）,负责 RenderObject 树中的元素的尺寸,位置等计算
（4） 绘制 RenderObject 树 （paint）,绘制页面的像素信息
（5） 浏览器主进程将默认的图层和复合图层交给 GPU 进程,GPU 进程再将各个图层合成（composite）,最后显示出页面